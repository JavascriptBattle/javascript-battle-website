var Board=Backbone.Collection.extend({model:BoardTile}),BoardTile=Backbone.Model.extend({}),BoardTileView=Backbone.View.extend({tagName:"div",className:"battle-tile",initialize:function(){void 0===this.model&&console.log(void 0),this.render(),this.model.on("change",this.render())},render:function(){{var a=this.model.get("subType"),b=this.model.get("type");this.model.get("team")}if("Unoccupied"!==a){var c={Tree:"../img/tree.png",Adventurer:"../img/bkknight.png",BlackKnight:"../img/black-knight.png",DiamondMine:"../img/diamond.png",HealthWell:"../img/pot.png",Bones:"../img/grave.png"},d='<img src="'+c[a]+'" class="sprite">',e={0:"team-yellow",1:"team-blue"};if("Hero"===b){var f=this.model.get("name"),g=this.model.get("battleId"),h=this.model.get("health"),i=this.model.get("gameTurn"),j=this.model.get("lastActiveTurn");j===i-1&&1!==i&&this.$(".sprite").addClass("current-turn"),d='<img src="'+c[a]+'" id="H'+g+'" class="sprite">',d+='<span class="indicator '+e[this.model.get("team")]+'">'+g+"</span>",d+='<span class="lifebar"><span class="life-capacity" style="height:'+h+'%"></span></span>',this.$el.addClass("current-user-"+f)}else if("DiamondMine"===b){var k=this.model.get("owner");k&&(d+='<span class="indicator '+e[k.team]+'">'+k.id+"</span>")}this.$el.html(d)}}}),BoardView=Backbone.View.extend({tagName:"section",className:"battle-map",initialize:function(){this.render()},render:function(){this.$el.html(""),this.createBoardView()},createBoardView:function(){for(var a=this.collection.lengthOfSide,b=0;a>b;b++){for(var c=$('<div class="tile-row">'),d=0;a>d;d++){var e=new BoardTileView({model:this.collection.at(b*a+d)});c.append(e.$el)}this.$el.append(c)}}}),Game=Backbone.Model.extend({url:"api/gameDataForUser/1",initialize:function(){var a=new User;this.set("userModel",a)},parse:function(a){this.set("turn",a.turn),this.set("maxTurn",a.maxTurn),this.set("moveMessages",a.moveMessage),this.set("winningTeam",a.winningTeam),this.set("attackMessages",a.attackMessage),this.set("killMessages",a.killMessage),this.set("teamDiamonds",a.totalTeamDiamonds);var b=new Board,c=new Team,d=new Team;b.lengthOfSide=a.board.lengthOfSide,_.each(a.teams[0],function(b){b.gameTurn=a.turn,b.battleId=b.id,delete b.id;var d=new Hero(b);c.add(d)}),_.each(a.teams[1],function(b){b.gameTurn=a.turn,b.battleId=b.id,delete b.id;var c=new Hero(b);d.add(c)}),_.each(_.flatten(a.board.tiles),function(a){a.battleId=a.id,delete a.id,a.gameTurn=this.get("turn");var c=new BoardTile(a);b.add(c)}.bind(this)),this.set("teamYellow",c),this.set("teamBlue",d),this.set("board",b)},updateTurn:function(a){this.url="/api/gameDataForUser/"+a}}),GameView=Backbone.View.extend({tagName:"div",className:"outer",initialize:function(){this.updateTurn(0),this.paused=!0,this.playInProgress=!1,this.sliderInitialized=!1,this.$el.html('<div class="messages"></div><div class="row map"></div>'),this.$el.append('<input class="row slider" /></div>'),this.$el.append('<div class="row play-controls"><span class="play-pause-game glyphicon glyphicon-play"></span><span class="restart-game glyphicon glyphicon-repeat"></span></div>'),this.$el.append('<span class="turn"></span>')},events:{"click .play-pause-game":"togglePlayGame","click .restart-game":"restartGame"},render:function(){this.checkWinner();var a=this.$el.find(".map");a.html(""),$(".messages").text(""),$(".messages").append(this.model.get("killMessages"));var b=new TeamView({collection:this.model.get("teamYellow"),className:"team-info t-yellow"});b.teamColor="Team Yellow",b.diamonds=this.model.get("teamDiamonds")[0],b.render();var c=new TeamView({collection:this.model.get("teamBlue"),className:"team-info t-blue"});c.teamColor="Team Blue",c.diamonds=this.model.get("teamDiamonds")[1],c.render();var d=new BoardView({collection:this.model.get("board")});a.append(b.$el),a.append(d.$el),a.append(c.$el),this.$el.find(".turn").text("Turn: "+this.model.get("turn"))},updateTurn:function(a){return this.model.updateTurn(a),this.model.fetch({success:function(){this.initializeSlider();var a=this.model.get("userModel");a.fetch({success:function(){this.render();var b=a.get("githubHandle");b&&this.$el.find(".current-user-"+b).append('<span class="arrow"></span>')}.bind(this),error:function(){this.initializeSlider(),this.render()}.bind(this)})}.bind(this),error:function(){}.bind(this)})},sendSliderToTurn:function(a){var b=this.$el.find(".range-bar"),c=b.find(".range-handle"),d=b.find(".range-quantity"),e=this.model.get("maxTurn"),f=a/e,g=function(a){return+a.slice(0,-2)},h=g(b.css("width")),i=g(c.css("width")),j=h-i,k=f*j;c.css("left",k+"px"),d.css("width",k+"px")},initializeSlider:function(){if(!this.sliderInitialized){this.sliderInitialized=!0;{var a=this.$el.find(".slider"),b=a[0],c=(this.model.get("turn"),this.model.get("maxTurn"));new Powerange(b,{min:0,max:c,step:1,callback:function(){this.pauseGame(),this.updateTurn(b.value)}.bind(this)})}$(document).keydown(function(a){var b=0;if(39===a.which)b=1;else{if(37!==a.which)return;b=-1}this.pauseGame();var c=this.model.get("turn"),d=this.model.get("maxTurn"),e=Math.max(Math.min(c+b,d),0);this.updateTurn(e),this.sendSliderToTurn(e)}.bind(this))}},restartGame:function(){this.pauseGame(),$.when(this.updateTurn(0)).then(function(){this.sendSliderToTurn(0)}.bind(this))},pauseGame:function(){this.paused=!0;var a=this.$el.find(".play-pause-game");a.removeClass("glyphicon-pause"),a.addClass("glyphicon-play")},togglePlayGame:function(){this.paused=!this.paused;var a=this.$el.find(".play-pause-game");this.paused?(a.removeClass("glyphicon-pause"),a.addClass("glyphicon-play")):(a.removeClass("glyphicon-play"),a.addClass("glyphicon-pause"),this.autoPlayGame())},autoPlayGame:function(){var a=this.model.get("turn"),b=this.model.get("maxTurn");if(b>a&&this.paused===!1&&this.playInProgress===!1){this.playInProgress=!0;var c=this.updateTurn(a+1);$.when(c).then(function(){this.playInProgress=!1,this.sendSliderToTurn(a+1),this.autoPlayGame()}.bind(this))}},checkWinner:function(){var a=this.model.get("winningTeam"),b=$(".winner-msg");b.text(0===a?"Yellow Team Wins!":1===a?"Blue Team Wins!":"See Today's Battle")}}),Leaderboard=Backbone.Model.extend({url:"api/leaderboard/lifetime/kills",updateLeaderboard:function(a){this.url="api/leaderboard/"+a.timeFrame+"/"+a.stat}}),LeaderboardView=Backbone.View.extend({tagName:"div",className:"centered",initialize:function(){this.leaderboardParams={stat:"damageDealt",timeFrame:"lifetime"},this.statItems={lifetime:[["damageDealt","Damage Dealt"],["deaths","Deaths"],["diamondsEarned","Diamonds Earned"],["gravesRobbed","Graves Robbed"],["healthGiven","Health Given"],["healthRecovered","Health Recovered"],["kills","Kills"],["losses","Losses"],["minesCaptured","Mines Captured"],["wins","Wins"]],average:[["damageDealt","Damage Dealt"],["deaths","Deaths"],["diamondsEarned","Diamonds Earned"],["gravesRobbed","Graves Robbed"],["healthGiven","Health Given"],["healthRecovered","Health Recovered"],["kills","Kills"],["losses","Losses"],["minesCaptured","Mines Captured"],["wins","Wins"]],recent:[["damageDealt","Damage Dealt"],["diamondsEarned","Diamonds Earned"],["gravesRobbed","Graves Robbed"],["healthGiven","Health Given"],["healthRecovered","Health Recovered"],["kills","Kills"],["minesCaptured","Mines Captured"]]};var a=[["lifetime","Overall"],["average","Average"],["recent","Most Recent Battle"]],b=a.map(function(a){return'<option class="leaderboard" value="'+a[0]+'">'+a[1]+"</option>"}),c=this.statItems[this.leaderboardParams.timeFrame].map(function(a){return'<option value="'+a[0]+'">'+a[1]+"</option>"}),d='<select class="leaderboard-time-param" name="stats">'+b.join("")+'</select><select class="leaderboard-stat-param" name="time">'+c.join("")+'</select><table class="table table-striped table-bordered table-responsive leaderboard-table"></table>';this.$el.html(d),this.model.updateLeaderboard(this.leaderboardParams),$.when(this.model.fetch()).then(function(){this.render()}.bind(this))},events:{"change select.leaderboard-time-param":"updateLeaderboardTime","change select.leaderboard-stat-param":"updateLeaderboardStat"},updateLeaderboardTime:function(a){if(this.leaderboardParams.timeFrame!==a.currentTarget.value){this.leaderboardParams.timeFrame=a.currentTarget.value;var b=this.statItems[this.leaderboardParams.timeFrame],c=b.map(function(a){return'<option value="'+a[0]+'">'+a[1]+"</option>"}),d=this.$el.find("select.leaderboard-stat-param");d.html(c);for(var e=!1,f=0;f<b.length;f++)if(b[f][0]===this.leaderboardParams.stat){d.val(this.leaderboardParams.stat),e=!0;break}e||(this.leaderboardParams.stat=b[0][0]),this.updateLeaderboard()}},updateLeaderboardStat:function(a){this.leaderboardParams.stat=a.currentTarget.value,this.updateLeaderboard()},updateLeaderboard:function(){this.model.updateLeaderboard(this.leaderboardParams),$.when(this.model.fetch()).then(function(){this.render()}.bind(this),function(){console.log("Failed to retrieve leaderboard"),this.render(!0)}.bind(this))},render:function(a){var b=this.$el.find("table.leaderboard-table");if(a)b.html("<tr><th>Rank</th><th>Name</th><th>Failed To Load</th></tr>");else{for(var c="Failed To Load",d=this.statItems[this.leaderboardParams.timeFrame],e=0;e<d.length;e++){var f=d[e][0];if(f===this.leaderboardParams.stat){c=d[e][1];break}}for(var g='<tr class="lifetime-table-header leaderboard-headers"><th class="leaderboard-rank">Rank</th><th class="leaderboard-name">Name</th><th class="leaderboard-damage">'+c+"</th></tr>",h=this.model.get("topUsers"),e=0;e<h.length;e++){var i=h[e];g+="<tr>",g+="<td>"+(e+1)+"</td>",g+='<td><a href="https://github.com/'+encodeURIComponent(i.name)+'/hero-starter">'+i.name+"</a></td>",g+="<td>"+i.value+"</td>",g+="</tr>"}g+="</table>",b.html(g)}}}),NavbarView=Backbone.View.extend({initialize:function(){this.render(),$.when(this.model.fetch()).then(function(){this.render()}.bind(this))},render:function(){var a,b=this.model.get("githubHandle");a=b?new EJS({url:"../ejs_templates/navbar"}).render(this.model):new EJS({url:"../ejs_templates/navbarNotLoggedIn"}).render(this.model),this.$el.html(a)}}),RulesView=Backbone.View.extend({initialize:function(){this.viewing={},this.viewing="general",this.render()},events:{"click .general":"showGeneral","click .rules":"showRules","click .improve":"showImprove"},showRules:function(a){a.preventDefault(),this.viewing="rules",this.render(),$(".rules").tab("show")},showGeneral:function(a){a.preventDefault(),this.viewing="general",this.render(),$(".general").tab("show")},showImprove:function(a){a.preventDefault(),this.viewing="improve",this.render(),$(".improve").tab("show")},render:function(){var a;"rules"===this.viewing?a=new EJS({url:"/ejs_templates/rules"}).render(this.model):"general"===this.viewing?a=new EJS({url:"/ejs_templates/general"}).render(this.model):"improve"===this.viewing&&(a=new EJS({url:"/ejs_templates/improve"}).render(this.model)),this.$el.html(a)}}),cbpAnimatedHeader=function(){function a(){window.addEventListener("scroll",function(){f||(f=!0,setTimeout(b,250))},!1)}function b(){var a=document.querySelector(".user-options"),b=c();b>=g?(classie.add(e,"navbar-shrink"),a&&classie.add(a,"user-options-shrink")):(classie.remove(e,"navbar-shrink"),a&&classie.remove(a,"user-options-shrink")),f=!1}function c(){return window.pageYOffset||d.scrollTop}var d=document.documentElement,e=document.querySelector(".navbar-fixed-top"),f=!1,g=300;a()}();!function(a){"use strict";function b(a){return new RegExp("(^|\\s+)"+a+"(\\s+|$)")}function c(a,b){var c=d(a,b)?f:e;c(a,b)}var d,e,f;"classList"in document.documentElement?(d=function(a,b){return a.classList.contains(b)},e=function(a,b){a.classList.add(b)},f=function(a,b){a.classList.remove(b)}):(d=function(a,c){return b(c).test(a.className)},e=function(a,b){d(a,b)||(a.className=a.className+" "+b)},f=function(a,c){a.className=a.className.replace(b(c)," ")});var g={hasClass:d,addClass:e,removeClass:f,toggleClass:c,has:d,add:e,remove:f,toggle:c};"function"==typeof define&&define.amd?define(g):a.classie=g}(window),$(function(){$(".page-scroll a").bind("click",function(a){var b=$(this);$("html, body").stop().animate({scrollTop:$(b.attr("href")).offset().top},1500,"easeInOutExpo"),a.preventDefault()})}),$(function(){$("body").on("input propertychange",".floating-label-form-group",function(a){$(this).toggleClass("floating-label-form-group-with-value",!!$(a.target).val())}).on("focus",".floating-label-form-group",function(){$(this).addClass("floating-label-form-group-with-focus")}).on("blur",".floating-label-form-group",function(){$(this).removeClass("floating-label-form-group-with-focus")}),$(".hide-tip").click(function(){$(".game-tips").fadeOut("slow")})}),$("body").scrollspy({target:".navbar-fixed-top"}),$(".navbar-collapse ul li a").click(function(){$(".navbar-toggle:visible").click()});var Hero=Backbone.Model.extend({}),HeroView=Backbone.View.extend({className:"list-group-item list-group-item-info score-info",tagName:"li",initialize:function(){this.render()},render:function(){{var a=this.model.get("battleId"),b=this.model.get("health"),c=this.model.get("name");this.model.get("gameTurn"),this.model.get("lastActiveTurn")}1>b?(this.$el.removeClass("list-group-item-info").addClass("list-group-item-danger"),b="Dead"):b+="HP";var d='<div class="hero-header h-i'+a+'">(id:'+a+") <span>"+c+"</span> </div>",b='<div class="health-info h-i'+a+'">'+b+"</div>";this.$el.append(d+b)}}),Team=Backbone.Collection.extend({model:Hero}),TeamView=Backbone.View.extend({className:"list-group",tagName:"div",teamColor:void 0,initialize:function(){},render:function(){this.$el.html(""),this.teamColor&&this.$el.append('<h5 class="team-name">'+this.teamColor+" diamonds: "+this.diamonds+"</h5>"),this.createTeamView()},createTeamView:function(){_.each(this.collection.models,function(a){var b=new HeroView({model:a});this.$el.append(b.$el)}.bind(this))}}),User=Backbone.Model.extend({url:"/userInfo",idAttribute:"_id",average:function(){var a=this.get("lifetimeStats").wins+this.get("lifetimeStats").losses,b=this,c=function(c){return(Number(parseFloat(b.get("lifetimeStats")[c]/a).toFixed(2))||0)+" per game"},d={gamesPlayed:a,kills:c("kills"),deaths:c("deaths"),damageDealt:c("damageDealt"),minesCaptured:c("minesCaptured"),diamondsEarned:c("diamondsEarned"),healthRecovered:c("healthRecovered"),gravesRobbed:c("gravesRobbed")};return d}}),UserView=Backbone.View.extend({initialize:function(){this.viewing={},this.viewing="settings",this.render(),$.when(this.model.fetch()).then(function(){this.render()}.bind(this))},events:{submit:"handleSubmit","click .settings":"showSettings","click .recentStats":"showRecent","click .lifetimeStats":"showLifetime","click .averageStats":"showAverage"},handleSubmit:function(a){a.preventDefault();var b=this.$el.find("#inputRepo").val(),c=this.model.get("codeRepo");0!==b.length&&b!==c?(this.model.set("codeRepo",_.escape(b)),this.model.save(),this.render(),this.$el.find(".form-group").addClass("has-success"),this.$el.find(".form-group").addClass("has-feedback")):(this.$el.find(".form-group").removeClass("has-success"),this.$el.find(".form-group").removeClass("has-feedback"),this.render())},showSettings:function(a){a.preventDefault(),this.viewing="settings",this.render(),this.$el.find(".settings").tab("show")},showRecent:function(a){a.preventDefault(),this.viewing="recent",this.render(),this.$el.find(".recentStats").tab("show")},showLifetime:function(a){a.preventDefault(),this.viewing="lifetime",this.render(),this.$el.find(".lifetimeStats").tab("show")},showAverage:function(a){a.preventDefault(),this.viewing="average",this.render(),this.$el.find(".averageStats").tab("show")},render:function(){var a,b=this.model.get("githubHandle");if(b&&"settings"===this.viewing)a=new EJS({url:"/ejs_templates/settings"}).render(this.model);else if(b&&"lifetime"===this.viewing)a=new EJS({url:"/ejs_templates/lifetime"}).render(this.model);else if(b&&"recent"===this.viewing)a=new EJS({url:"/ejs_templates/recent"}).render(this.model);else if(b&&"average"===this.viewing){var c=this.model.average();c.githubHandle=this.model.get("githubHandle"),a=new EJS({url:"/ejs_templates/average"}).render(c)}else b||(a=new EJS({url:"/ejs_templates/notLoggedIn"}).render(this.model));this.$el.html(a)}}),app={};app.game=new Game,app.gameView=new GameView({model:app.game}),$(".gamegrid-content").append(app.gameView.$el),app.user=new User,app.userView=new UserView({model:app.user}),$("#join").append(app.userView.$el),app.navbarView=new NavbarView({model:app.user}),$(".navbar").append(app.navbarView.$el),app.rulesView=new RulesView({model:app.user}),$("#rules").append(app.rulesView.$el),app.leaderboard=new Leaderboard,app.leaderboardView=new LeaderboardView({model:app.leaderboard}),$("#leaderboard div.container").append(app.leaderboardView.$el),$(function(){function a(){$(".battle-tile").length||$(".leaderboard-table").children().length?($(".gamegrid-content, .game-tips").show(),$("#replay").css("min-height","1094px"),$(".spinner").remove()):($(".gamegrid-content, .game-tips").hide(),$(".spinner").length||$("#replay").css("min-height","500px").append('<img class="spinner" src="https://s3.amazonaws.com/jharclerode/350+(2).GIF">'),console.log("loading"),b=setTimeout(a,1e3))}a();var b});